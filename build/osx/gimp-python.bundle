<?xml version="1.0" standalone="no"?> <!--*- mode: xml -*-->
<app-bundle>

  <meta>
    <!-- Where to pick up the GTK+ installation, icon themes,
         etc. Note that "${env:JHBUILD_PREFIX}" is evaluated to the
         value of the environment variable JHBUILD_PREFIX. You can
         define additional prefixes and refer to them in paths
         throughout this file on the form "${prefix:name}". This is
         useful for installing certain libraries or even the
         application itself separately. Note that JHBUILD_PREFIX is
         defined by jhbuild, so it you are not using jhbuild you can
         either define your own or just hardcode the path here.
    -->
    <!-- <prefix name="default">${env:JHBUILD_PREFIX}</prefix> -->
    <prefix name="default">${env:JHBUILD_PREFIX}</prefix>

    <!-- The project directory is the default location of the created
         app. If you leave out the path, the current directory is
         used. Note the usage of an environment variable here again.
    -->
    <destination overwrite="yes">${env:HOME}</destination>

    <image>
      <!-- Not implemented yet (DMG image). -->
    </image>

    <!-- Comment this out to keep the install names in binaries -->
    <run-install-name-tool/>
 
    <!-- Optionally specify a launcher script to use. If the
         application sets up everything needed itself, like
         environment variable, linker paths, etc, a launcher script is
         not needed. If the source path is left out, the default
         script will be used.
    -->
    <!-- <launcher-script>${project}/launcher.sh</launcher-script > -->
    <launcher-script>
      ${project}/launcher-python.sh
    </launcher-script>

    <!-- Not implemented: Optional runtime, could be python or mono
         for example.
    -->
    <!-- runtime copy="yes">/usr/bin/python</runtime -->
    <!-- Indicate the active gtk version to use. This is needed only
         for gtk+-3.0 projects. -->
    <gtk>gtk+-2.0</gtk>
  </meta>

  <!-- We need to pack our own Python to avoid compatibility problems. -->
  <binary dest="${bundle}/Contents/MacOS">
    ${prefix}/bin/python
  </binary>

  <!-- Copy in Info.plist -->
  <plist>${project}/Info.plist</plist>

  <!-- Copy in libpyglib, which will pull in other dependencies we need -->
  <binary>
    ${prefix}/lib/libpyglib-2.0-python.0.dylib
  </binary>
  <!-- Gtk+ is required by python modules which aren't searched for
       dependencies, so we have to pull it in explicitly. It will
       bring Pango and Cairo with it. Note the use of ${gtkversion},
       which expands to either 2.0 or 3.0, depending on which value of
       gtk is specified.-->
  <binary>
    ${prefix}/lib/libgtk-quartz-${gtkversion}.0.dylib
  </binary>

  <!-- We have to pull in the python modules, which are mixed python
       and loadable modules.  -->
  <data>
    ${prefix}/lib/python2.7/
  </data>

  <data>
    ${prefix}/lib/pygtk/2.0/
  </data>

  <data>
    ${prefix}/include/python2.7/
  </data>

  <!-- Name of main gimp binary -->
  <main-binary>${prefix}/bin/gimp</main-binary>

  <!-- Copy in gimp plugins -->
  <binary>${prefix}/lib/gimp/2.0/plug-ins/*</binary>

  <!-- Copy in gimp modules -->
  <binary>${prefix}/lib/gimp/2.0/modules/*.so</binary>

  <!-- Copy in gimp python modules -->
  <binary>${prefix}/lib/gimp/2.0/python/*</binary>

  <!-- Copy in GTK+ modules -->
  <binary>${prefix}/lib/${gtkdir}/modules/*.so</binary>

  <!-- Copy in babl modules -->
  <binary>${prefix}/lib/babl-0.1/*.so</binary>

  <!-- Copy in gegl modules -->
  <binary>${prefix}/lib/gegl-0.2/*.so</binary>

  <!-- Copy in GTK+ themeing engines -->
  <binary>${prefix}/lib/${gtkdir}/${pkg:${gtk}:gtk_binary_version}/engines/*.so</binary>

  <!-- Copy in GTK+ printer backends -->
  <binary>${prefix}/lib/${gtkdir}/${pkg:${gtk}:gtk_binary_version}/printbackends/*.so</binary>

  <!-- Copy in GTK+ immodules -->
  <binary>${prefix}/lib/${gtkdir}/${pkg:${gtk}:gtk_binary_version}/immodules/*.so</binary>

  <!-- Copy in pango modules -->
  <binary>${prefix}/lib/pango/${pkg:pango:pango_module_version}/modules/*.so</binary>

  <!-- Starting with 2.24, gdk-pixbuf installs into its own directory. -->
  <binary>${prefix}/lib/gdk-pixbuf-2.0/${pkg:${gtk}:gtk_binary_version}/loaders/*.so</binary>

  <!-- Translation filenames-->
  <translations name="gtk20">
    ${prefix}/share/locale
  </translations>

  <!-- GTK+2 data -->
  <data>${prefix}/etc/gtk-2.0/*</data>

  <!-- Fontconfig data; requires clean up -->
  <data>${prefix}/etc/fonts/fonts.dtd</data>
  <data>${prefix}/etc/fonts/conf.avail/*</data>
  <data>${prefix}/etc/fonts/conf.d/*</data>

  <!-- Gimp data -->
  <data>${prefix}/etc/gimp/2.0/*</data>
  <data dest="${bundle}/Contents/Resources/share/gimp">${prefix}/share/gimp</data>

  <!-- Pango data -->
  <data>${prefix}/etc/pango/pango.modules</data>

  <!-- XML data -->
  <data>${prefix}/etc/xml/catalog</data>

  <!-- locale (TODO: trim) -->
  <data>${prefix}/share/locale</data>
  <data>${prefix}/lib/charset.alias</data>

  <!-- Theme data-->
  <data>${prefix}/share/themes</data>

  <!-- Theme data-->
  <data>${prefix}/share/themes</data>

  <!-- GTK+ theme data -->
  <data>${prefix}/share/gtk-engines/*.xml</data>

  <!-- mitch says this will change default theme, didn't work. -->
  <data dest="${bundle}/Contents/Resources/etc/${gtkdir}/gtkrc">
    ${project}/gtkrc
  </data>

  <!-- Interesting defaults -->
  <data dest="${bundle}/Contents/Resources/etc/gimp/2.0/gimprc">
    ${project}/gimprc
  </data>

  <!-- Because fontconfig has terrible defaults -->
  <data dest="${bundle}/Contents/Resources/etc/fonts/fonts.conf">
    ${project}/fonts.conf
  </data>

  <!-- Icons -->
  <data dest="${bundle}/Contents/Resources">${project}/gimp.icns</data>
  <data dest="${bundle}/Contents/Resources">${project}/xcf.icns</data>

  <!-- Icon theme, both tango and hicolor are required? -->
  <icon-theme icons="auto">
    Tango
  </icon-theme>

</app-bundle>
